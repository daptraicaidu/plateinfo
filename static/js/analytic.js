///////////////
// KI·ªÇM TRA QUY·ªÄN(PERMISSION)
///////////////

document.addEventListener("DOMContentLoaded", async () => {
  try {
    const response = await fetch("http://helloworld871523-001-site1.qtempurl.com/api/auth/check-access", {
      method: "GET",
      credentials: "include",
    });

    if (!response.ok) {
      throw new Error(await response.text()); // L·∫•y l·ªói t·ª´ BE
    }

    const data = await response.json();
    console.log("‚úÖ Truy c·∫≠p ƒë∆∞·ª£c:", data.message);
  } catch (error) {
    console.warn("üö´ Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p:", error);
    window.location.href = "index.html"; // Chuy·ªÉn h∆∞·ªõng trang n·∫øu b·ªã ch·∫∑n
  }
});


///////////////
// G·ªåI MAP V√Ä G·ªåI API THONGKE
///////////////


var map; 
var markers = []; // Danh s√°ch marker ƒë·ªÉ x√≥a tr∆∞·ªõc khi v·∫Ω m·ªõi

document.addEventListener("DOMContentLoaded", function () {
  // T·∫°o b·∫£n ƒë·ªì n·∫øu ch∆∞a c√≥
  map = L.map("map", {
    fullscreenControl: true
  }).setView([21.028511, 105.804817], 12);
  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution: "¬© OpenStreetMap contributors"
  }).addTo(map);
});

async function fetchThongKe() {
  

  const loaiPhuongTien = document.getElementById('loaiPhuongTien').value;
  const diaDiem = document.getElementById('diaDiem').value;
  const hanhVi = document.getElementById('hanhVi').value;
  const year = document.getElementById('year').value;
  const month = document.getElementById('month').value;
  const day = document.getElementById('day').value;

  const queryParams = new URLSearchParams({
    loaiPhuongTien, diaDiem, hanhVi, year, month, day
  }).toString();

  try {
    const response = await fetch(`http://helloworld871523-001-site1.qtempurl.com/api/viphamgt/thongke?${queryParams}`, {
      method: "GET",
      credentials: "include", // üî• Quan tr·ªçng: ƒê·∫£m b·∫£o session ƒë∆∞·ª£c g·ª≠i l√™n BE
    });
    
    const data = await response.json();

    // X√≥a c√°c marker c≈© tr√™n b·∫£n ƒë·ªì tr∆∞·ªõc khi v·∫Ω m·ªõi
    markers.forEach(marker => map.removeLayer(marker));
    markers = [];

    let dataBody = document.getElementById('dataBody');
    if (!dataBody) {
      console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ #dataBody");
      return;
    }
    dataBody.innerHTML = ''; // X√≥a d·ªØ li·ªáu c≈©

    let table = `
            <table class="custom-table">
                <thead>
                    <tr>
                        <th>Bi·ªÉn ki·ªÉm so√°t</th>
                        <th>Lo·∫°i ph∆∞∆°ng ti·ªán</th>
                        <th>Th·ªùi gian</th>
                        <th>ƒê·ªãa ƒëi·ªÉm</th>
                        <th>H√†nh vi</th>
                    </tr>
                </thead>
                <tbody>
        `;

    if (!data.chiTiet || data.chiTiet.length === 0) {
      table += `<tr><td colspan="5">Kh√¥ng c√≥ d·ªØ li·ªáu</td></tr>`;
    } else {
      data.chiTiet.forEach(item => {
        table += `
                    <tr>
                        <td>${item.bienKiemSoat || "N/A"}</td>                    
                        <td>${item.loaiPhuongTien || "N/A"}</td>
                        <td>${item.thoiGian || "N/A"}</td>
                        <td>${item.diaDiem || "N/A"}</td>
                        <td>${item.hanhVi || "N/A"}</td>
                    </tr>
                `;

        // V·∫Ω marker n·∫øu c√≥ t·ªça ƒë·ªô
        if (item.toaDo) {
          const [lat, lng] = item.toaDo.split(",").map(coord => parseFloat(coord.trim()));
          if (!isNaN(lat) && !isNaN(lng)) {
            let marker = L.marker([lat, lng]).addTo(map)
              .bindPopup(`
                                <b>${item.bienKiemSoat || "N/A"}</b><br>
                                ${item.loaiPhuongTien || "N/A"}<br>
                                ${item.diaDiem || "N/A"}<br>
                                ${item.hanhVi || "N/A"}
                            `);
            markers.push(marker);
          }
        }
      });
    }

    table += `</tbody></table>`;
    dataBody.innerHTML = table;

  } catch (error) {
    console.error("L·ªói khi fetch d·ªØ li·ªáu:", error);
  }
}
