///////////////
// Ki·ªÉm tra quy·ªÅn b√°o c√°o ngay khi trang load
///////////////////

document.addEventListener("DOMContentLoaded", async () => {
  let hasPermission = false; // Bi·∫øn l∆∞u tr·∫°ng th√°i quy·ªÅn

  try {
    const response = await fetch("http://helloworld871523-001-site1.qtempurl.com/api/auth/check-access", {
      method: "GET",
      credentials: "include",
    });

    if (!response.ok) {
      throw new Error(await response.text());
    }

    const data = await response.json();
    console.log("‚úÖ C√≥ th·ªÉ b√°o c√°o:", data.message);
    hasPermission = true; // Ghi nh·∫≠n user c√≥ quy·ªÅn b√°o c√°o
  } catch (error) {
    console.warn("üö´ Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p:", error);
  }

  // Ch·ªâ th√™m n√∫t b√°o c√°o n·∫øu c√≥ quy·ªÅn
  function addReportButton(plateItem, bs) {
    if (!hasPermission) return; // Kh√¥ng c√≥ quy·ªÅn th√¨ kh√¥ng hi·ªán n√∫t

    let reportButton = document.createElement("button");
    reportButton.classList.add("btn", "primary-btn", "report-btn");
    reportButton.textContent = "B√°o c√°o vi ph·∫°m";

    reportButton.addEventListener("click", function (event) {
      event.stopPropagation();
      if (bs !== "Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c") {
        window.location.href = `report?bienso=${encodeURIComponent(bs)}`;
      } else {
        alert("Ch∆∞a c√≥ bi·ªÉn s·ªë, vui l√≤ng ch·ªù h·ªá th·ªëng nh·∫≠n di·ªán xong!");
      }
    });

    plateItem.appendChild(reportButton);
  }


  //////////////
  // T√çNH NƒÇNG G·ª¨I ·∫¢NH
  /////////////////

  document.getElementById("lookup-upload").addEventListener("click", uploadImage);
  document.getElementById("lookup-camera").addEventListener("click", uploadImage);

  function uploadImage(event) {
    // NgƒÉn h√†nh vi reload
    // if (event) event.preventDefault();
    // ∆Øu ti√™n d√πng file t·ª´ uploadedFile (drag & drop / ch·ªçn ·∫£nh)
    let file = uploadedFile;
    // N·∫øu kh√¥ng c√≥ file, ki·ªÉm tra xem c√≥ ·∫£nh ch·ª•p t·ª´ camera hay kh√¥ng
    if (!file && capturedImage && capturedImage.src && capturedImage.src.startsWith("data:")) {
      file = dataURLtoFile(capturedImage.src, "captured.png");
    }

    if (!file) {
      alert("Vui l√≤ng ch·ªçn m·ªôt ·∫£nh.");
      return;
    }

    const formData = new FormData();
    formData.append("file", file);

    fetch('http://localhost:8000/detect/', {
      method: 'POST',
      body: formData,
    })
      .then(response => response.json())
      .then(data => {
        const platesContainer = document.getElementById("plates-container");
        platesContainer.innerHTML = '';

        if (data.plates && data.plates.length > 0) {
          data.plates.forEach(plateBase64 => {
            const plateItem = document.createElement('div');
            plateItem.classList.add('plate-item');

            const imgElement = document.createElement('img');
            imgElement.src = `data:image/jpeg;base64,${plateBase64}`;

            const plateText = document.createElement('span');
            plateText.textContent = "ƒêang nh·∫≠n di·ªán...";

            plateItem.appendChild(imgElement);
            plateItem.appendChild(plateText);
            platesContainer.appendChild(plateItem);

            // Chuy·ªÉn base64 th√†nh Blob ƒë·ªÉ g·ª≠i ƒë·∫øn API /read/
            fetch(`data:image/jpeg;base64,${plateBase64}`)
              .then(res => res.blob())
              .then(blob => {
                const textFormData = new FormData();
                textFormData.append("file", blob, "plate.jpg");

                return fetch('http://localhost:8000/read/', {
                  method: 'POST',
                  body: textFormData,
                });
              })
              .then(response => response.json())

              // .then(textData => {
              //   const bs = textData.plate_text || "Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c";
              //   // plateText.textContent = bs;
              //   plateText.innerHTML = `${bs} (Nh·∫•n v√†o ·∫£nh ƒë·ªÉ tra c·ª©u) <button id="reportBtn" class="btn primary-btn" type="button">B√°o c√°o vi ph·∫°m</button>`;

              //   // Th√™m s·ª± ki·ªán click ƒë·ªÉ ki·ªÉm tra ph·∫°t ngu·ªôi
              //   plateItem.addEventListener("click", function () {
              //     checkPhatNguoi(bs);
              //   });

              // })

              .then(textData => {
                const bs = textData.plate_text || "Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c";
                plateText.innerHTML = `${bs} (Nh·∫•n v√†o ·∫£nh ƒë·ªÉ tra c·ª©u)`;

                // Ch·ªâ th√™m n√∫t b√°o c√°o n·∫øu user c√≥ quy·ªÅn
                addReportButton(plateItem, bs);

                // // T·∫°o n√∫t b√°o c√°o vi ph·∫°m
                // let reportButton = document.createElement("button");
                // reportButton.classList.add("btn", "primary-btn", "report-btn");
                // reportButton.textContent = "B√°o c√°o vi ph·∫°m";

                // // Th√™m s·ª± ki·ªán click cho n√∫t b√°o c√°o
                // reportButton.addEventListener("click", function (event) {
                //   event.stopPropagation(); // NgƒÉn kh√¥ng cho event click v√†o plateItem ch·∫°y
                //   if (bs !== "Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c") {
                //     window.location.href = `report?bienso=${encodeURIComponent(bs)}`;
                //   } else {
                //     alert("Ch∆∞a c√≥ bi·ªÉn s·ªë, vui l√≤ng ch·ªù h·ªá th·ªëng nh·∫≠n di·ªán xong!");
                //   }
                // });

                // // Th√™m n√∫t v√†o plateItem
                // plateItem.appendChild(reportButton);

                // Th√™m s·ª± ki·ªán click v√†o plateItem ƒë·ªÉ tra c·ª©u
                plateItem.addEventListener("click", function () {
                  checkPhatNguoi(bs);
                });

              })

              .catch(error => {
                console.error('L·ªói khi ƒë·ªçc bi·ªÉn s·ªë:', error);
                plateText.textContent = "L·ªói nh·∫≠n di·ªán";
              });
          });
        } else {
          platesContainer.innerHTML = '<p>Kh√¥ng ph√°t hi·ªán bi·ªÉn s·ªë n√†o.</p>';
        }
      })
      .catch(error => {
        console.error('L·ªói khi t·∫£i ·∫£nh:', error);
      });
  }

});

/////////////////
// H√†m g·ª≠i bi·ªÉn s·ªë ƒë·∫øn API 

async function checkPhatNguoi(bienso) {
  try {
    const response = await fetch('http://helloworld871523-001-site1.qtempurl.com/api/PN/traCuuViPham', {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ bienSo: bienso })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }

    const data = await response.json();
    if (!Array.isArray(data)) {
      showPhatNguoiForm([], bienso);
      return;
    }

    showPhatNguoiForm(data, bienso);
  } catch (error) {
    console.error('L·ªói khi l·∫•y d·ªØ li·ªáu:', error);
    showPhatNguoiForm([], bienso);
  }
}




// Hi·ªÉn th·ªã form ph·∫°t ngu·ªôi ·ªü d·∫°ng b·∫£ng v·ªõi n√∫t "X" ·ªü g√≥c tr√™n b√™n ph·∫£i
function showPhatNguoiForm(data, bienso) {
  let total = data.length;
  let chuaxuphat = data.filter(v => v.trangThai === "Ch∆∞a x·ª≠ ph·∫°t").length;
  let daxuphat = total - chuaxuphat;

  let content = `<div class="content-wrapper">
      <button id="closePnFormBtn" class="btn primary-btn" onclick="closePhatNguoiForm()">X</button>
      <h2>Th√¥ng tin ph·∫°t ngu·ªôi</h2>
      <p id="bienso"><strong>Bi·ªÉn s·ªë:</strong> ${bienso}</p>`;

  if (total > 0) {
    content += `<div id="tonghop">
          <h3></h3>
          <p><strong>T·ªïng s·ªë vi ph·∫°m:</strong> ${total}</p>
          <div>
          <a>Ch∆∞a x·ª≠ ph·∫°t: <strong>${chuaxuphat}</strong>, </a>
          <a>ƒê√£ x·ª≠ ph·∫°t: <strong>${daxuphat}</strong></a>
          </div>
        </div>`;
  }

  if (total > 0) {
    content += `<table id="phat-nguoi-table">
          <thead>
              <tr>
                  <th>Lo·∫°i ph∆∞∆°ng ti·ªán</th>
                  <th>Th·ªùi gian vi ph·∫°m</th>
                  <th>ƒê·ªãa ƒëi·ªÉm</th>
                  <th>H√†nh vi vi ph·∫°m</th>
                  <th>Tr·∫°ng th√°i</th>
                  <th>ƒê∆°n v·ªã ph√°t hi·ªán</th>
                  <th>N∆°i gi·∫£i quy·∫øt</th>
              </tr>
          </thead>
          <tbody>`;

    data.forEach((v, index) => {
      content += `<tr id="row-${index}">
              <td>${v.loaiPhuongTien}</td>
              <td>${new Date(v.thoiGian).toLocaleString()}</td>
              <td>${v.diaDiem}</td>
              <td>${v.hanhVi}</td>
              <td>${v.trangThai}</td>
              <td>${v.donViPhatHien}</td>
              <td>${v.noiGiaiQuyet}</td>
          </tr>`;
    });
    content += `</tbody></table>`;
  } else {
    content += "<br><br><p>Kh√¥ng c√≥ l·ªói ph·∫°t ngu·ªôi n√†o.</p>";
  }

  content += `<br><br><button class="btn primary-btn" onclick="closePhatNguoiForm()">ƒê√≥ng</button>
  </div>`;

  const formContainer = document.getElementById("phat-nguoi-form");
  formContainer.style.display = "block";
  formContainer.innerHTML = content;
  formContainer.classList.add("show");
}


// ƒê√≥ng form ph·∫°t ngu·ªôi
function closePhatNguoiForm() {
  const formContainer = document.getElementById("phat-nguoi-form");
  formContainer.classList.remove("show");
  setTimeout(() => {
    formContainer.style.display = "none";
  }, 500);
}

// ƒê√≥ng banner khi click b√™n ngo√†i v√πng banner
document.addEventListener("click", function (event) {
  const formContainer = document.getElementById("phat-nguoi-form");
  if (formContainer && formContainer.classList.contains("show")) {
    // N·∫øu click kh√¥ng n·∫±m trong ph·∫ßn t·ª≠ banner, ƒë√≥ng banner
    if (!formContainer.contains(event.target)) {
      closePhatNguoiForm();
    }
  }
});




/////////////////////
// T√çNH NƒÇNG NH·∫¨P TAY
////////////////////

// H√†m m·ªõi cho t√≠nh nƒÉng nh·∫≠p tay bi·ªÉn s·ªë
function uploadSign() {
  const plate = document.getElementById('plate-input').value.trim();
  if (!plate) {
    alert('Nh·∫≠p bi·ªÉn s·ªë ƒëi, ƒë·ª´ng ƒë·ªÉ tr·ªëng!');
    return;
  }
  // G·ªçi API ki·ªÉm tra ph·∫°t ngu·ªôi v·ªõi bi·ªÉn s·ªë nh·∫≠p tay
  checkPhatNguoi(plate);
}
